{
    "inbounds": [
      {
        "port": 53001, // 服务器监听端口
        "protocol": "vmess",    // 主传入协议
        "settings": {
          "clients": [
            {
              "id": "9ac9a0b3-e80b-466b-813a-738c6cfd46cd",  // 用户 ID，客户端与服务器必须相同
              "alterId": 20 // 伪装值，1-100，值越大cpu能耗越大，0为关闭
            }
          ],
          "detour": { // 绕行配置，即指示客户端使用 dynamicPort 的配置通信
            "to": "dynamicPort"
          }
        },
        "streamSettings": {
            "network": "mkcp", //此处的 mkcp 也可写成 kcp，两种写法
            "kcpSettings": {
              "uplinkCapacity": 100, // 上行流量限制，MB
              "downlinkCapacity": 100, // 上行流量限制，MB
              "congestion": true, // 拥塞控制，"false"关闭，当丢包严重时，会自动降低吞吐量
              "readBufferSize": 10, // 读取缓存区大小，一般3MB
              "writeBufferSize": 10, // 写入缓存区大小，MB，网络环境极差可增加缓存
                "header": {
                "type": "none"
              }
            }
          }
      },
      {
        "protocol": "vmess",
        "port": "53000-53010", // 端口范围
        "tag": "dynamicPort",  // 与上面的 detour to 相同
        "settings": {
          "default": {
            "alterId": 20 // 与上面必须相同，伪装值
          }
        },
        "allocate": {            // 分配模式
          "strategy": "random",  // 随机开启
          "concurrency": 1,      // 同时开放一个端口,这个值最大不能超过端口范围的 1/3
          "refresh": 3           // 每三分钟刷新一次
        },
        "streamSettings": {
            "network": "mkcp",
            "kcpSettings": {
                "uplinkCapacity": 100,
                "downlinkCapacity": 100,
                "congestion": true,
                "readBufferSize": 10,
                "writeBufferSize": 10,
                "header": {
                  "type": "none"
                }
              }
          }
      }
    ],
    "outbounds": [
      {
        "protocol": "freedom",  // 主传出协议
        "settings": {}
      }
    ]
  }
